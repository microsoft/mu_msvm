/** @file
  SecEntry

  Copyright (c) Microsoft Corporation.
  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

    AREA    |.text|,ALIGN=3,CODE,READONLY

    EXPORT  _ModuleEntryPoint
    EXPORT  SetGuestOsId
    IMPORT  SecStartupWithStack

    ALIGN   8
StartupAddr
    DCQ     SecStartupWithStack

    ALIGN   8
TransitionIdtAddr
    DCQ     TransitionIdt

_ModuleEntryPoint PROC

    ldr     x4, TransitionIdtAddr
    msr     vbar_el1, x4

    // bl SerialWriteBanner

    mov     sp, x1
    ldr     x2, [x0, #8]
    ldr     x4, StartupAddr
    blr     x4
    ret

_ModuleEntryPoint ENDP

HvInvokeDebugger PROC
    mov     x2, x0
    mov     x1, 0x1
    ldr     x0, =0x000000000001000A
    hvc     #1
    and     x0, x0, #0xFFFF
    ret
HvInvokeDebugger ENDP

SetGuestOsId PROC
    ldr     x0, =0x0000000100010051
    ldr     x1, =0xFFFFFFFFFFFFFFFF
    ldr     x2, =0x00000000FFFFFFFE
    ldr     x3, =0x0000000000090002
    mov     x4, #0
    mov     x5, #0x0001000000000000
    mov     x6, #0
    hvc     #1
    and     x0, x0, #0xFFFF
    ret
SetGuestOsId ENDP

SerialWriteBanner PROC
    ldr     x9, =0x00000000EFFEB000
    mov     w10, #0x1B
    strb    w10, [x9]
    mov     w10, #0x63
    strb    w10, [x9]
    mov     w10, #0x1B
    strb    w10, [x9]
    mov     w10, #0x5B
    strb    w10, [x9]
    mov     w10, #0x33
    strb    w10, [x9]
    mov     w10, #0x4A
    strb    w10, [x9]
    mov     w10, #0x53
    strb    w10, [x9]
    mov     w10, #0x45
    strb    w10, [x9]
    mov     w10, #0x43
    strb    w10, [x9]
    mov     w10, #0x4D
    strb    w10, [x9]
    mov     w10, #0x41
    strb    w10, [x9]
    mov     w10, #0x49
    strb    w10, [x9]
    mov     w10, #0x4E
    strb    w10, [x9]
    mov     w10, #0x20
    strb    w10, [x9]
    mov     w10, #0x40
    strb    w10, [x9]
    mov     w10, #0x20
    strb    w10, [x9]
    mov     w10, #0x45
    strb    w10, [x9]
    mov     w10, #0x4C
    strb    w10, [x9]

    cmp     x8, #0x8
    bgt     %f3
    beq     %f2
    cbnz    x8, %f1
5
    bne     %b5
1
    mov     w10, #0x31
    b       %f4
2
    mov     w10, #0x32
    b       %f4
3
    mov     w10, #0x33
    b       %f4
4
    strb    w10, [x9]
    mov     w10, #0x0D
    strb    w10, [x9]
    mov     w10, #0x0A
    strb    w10, [x9]
    ret
SerialWriteBanner ENDP

    AREA    |.vectors|,ALIGN=6,CODE,READONLY  ; 64-byte alignment to match linker /ALIGN

TransitionIdt

TransitionIdtKernelSp0ExceptionHandler
    b   TransitionIdtKernelSp0ExceptionHandler
    ALIGN 64

TransitionIdtKernelSp0InterruptHandler
    b   TransitionIdtKernelSp0InterruptHandler
    ALIGN 64

TransitionIdtKernelSp0FiqHandler
    b   TransitionIdtKernelSp0FiqHandler
    ALIGN 64

TransitionIdtKernelSp0SystemErrorHandler
    b   TransitionIdtKernelSp0SystemErrorHandler
    ALIGN 64

TransitionIdtKernelExceptionHandler
    b   TransitionIdtKernelExceptionHandler
    ALIGN 64

TransitionIdtKernelInterruptHandler
    b   TransitionIdtKernelInterruptHandler
    ALIGN 64

TransitionIdtKernelFiqHandler
    b   TransitionIdtKernelFiqHandler
    ALIGN 64

TransitionIdtKernelSystemErrorHandler
    b   TransitionIdtKernelSystemErrorHandler
    ALIGN 64

TransitionIdtUserExceptionHandler
    b   TransitionIdtUserExceptionHandler
    ALIGN 64

TransitionIdtUserInterruptHandler
    b   TransitionIdtUserInterruptHandler
    ALIGN 64

TransitionIdtUserFiqHandler
    b   TransitionIdtUserFiqHandler
    ALIGN 64

TransitionIdtUserSystemErrorHandler
    b   TransitionIdtUserSystemErrorHandler
    ALIGN 64

TransitionIdtUser32ExceptionHandler
    b   TransitionIdtUser32ExceptionHandler
    ALIGN 64

TransitionIdtUser32InterruptHandler
    b   TransitionIdtUser32InterruptHandler
    ALIGN 64

TransitionIdtUser32FiqHandler
    b   TransitionIdtUser32FiqHandler
    ALIGN 64

TransitionIdtUser32SystemErrorHandler
    b   TransitionIdtUser32SystemErrorHandler
    ALIGN 64

TransitionIdtEnd

    ASSERT TransitionIdtEnd - TransitionIdt == 1024

TransitionIdtUnexpectedException
    b   TransitionIdtUnexpectedException

    END
